// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/jrmarcco/go-backend-demo/db/ent/account"
	"github.com/jrmarcco/go-backend-demo/db/ent/entries"
	"github.com/jrmarcco/go-backend-demo/db/ent/schema"
	"github.com/jrmarcco/go-backend-demo/db/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accountFields := schema.Account{}.Fields()
	_ = accountFields
	// accountDescAccountOwner is the schema descriptor for account_owner field.
	accountDescAccountOwner := accountFields[0].Descriptor()
	// account.AccountOwnerValidator is a validator for the "account_owner" field. It is called by the builders before save.
	account.AccountOwnerValidator = accountDescAccountOwner.Validators[0].(func(string) error)
	// accountDescCurrency is the schema descriptor for currency field.
	accountDescCurrency := accountFields[2].Descriptor()
	// account.DefaultCurrency holds the default value on creation for the currency field.
	account.DefaultCurrency = accountDescCurrency.Default.(string)
	// accountDescCreatedAt is the schema descriptor for created_at field.
	accountDescCreatedAt := accountFields[3].Descriptor()
	// account.DefaultCreatedAt holds the default value on creation for the created_at field.
	account.DefaultCreatedAt = accountDescCreatedAt.Default.(func() time.Time)
	// accountDescUpdatedAt is the schema descriptor for updated_at field.
	accountDescUpdatedAt := accountFields[4].Descriptor()
	// account.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	account.DefaultUpdatedAt = accountDescUpdatedAt.Default.(func() time.Time)
	// account.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	account.UpdateDefaultUpdatedAt = accountDescUpdatedAt.UpdateDefault.(func() time.Time)
	entriesFields := schema.Entries{}.Fields()
	_ = entriesFields
	// entriesDescAccountID is the schema descriptor for account_id field.
	entriesDescAccountID := entriesFields[0].Descriptor()
	// entries.AccountIDValidator is a validator for the "account_id" field. It is called by the builders before save.
	entries.AccountIDValidator = entriesDescAccountID.Validators[0].(func(uint64) error)
	// entriesDescAmount is the schema descriptor for amount field.
	entriesDescAmount := entriesFields[1].Descriptor()
	// entries.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	entries.AmountValidator = entriesDescAmount.Validators[0].(func(int64) error)
	// entriesDescCreatedAt is the schema descriptor for created_at field.
	entriesDescCreatedAt := entriesFields[2].Descriptor()
	// entries.DefaultCreatedAt holds the default value on creation for the created_at field.
	entries.DefaultCreatedAt = entriesDescCreatedAt.Default.(func() time.Time)
	// entriesDescUpdatedAt is the schema descriptor for updated_at field.
	entriesDescUpdatedAt := entriesFields[3].Descriptor()
	// entries.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entries.DefaultUpdatedAt = entriesDescUpdatedAt.Default.(func() time.Time)
	// entries.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entries.UpdateDefaultUpdatedAt = entriesDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescHashedPasswd is the schema descriptor for hashed_passwd field.
	userDescHashedPasswd := userFields[2].Descriptor()
	// user.HashedPasswdValidator is a validator for the "hashed_passwd" field. It is called by the builders before save.
	user.HashedPasswdValidator = userDescHashedPasswd.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
